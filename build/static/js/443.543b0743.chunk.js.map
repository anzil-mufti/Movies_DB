{"version":3,"file":"static/js/443.543b0743.chunk.js","mappings":"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","sources":["webpack://movie-db/./src/components/Layout/Navbar.module.css?b110","webpack://movie-db/./src/components/Layout/SearchBar.module.css?8186","images/Search_icon.svg","components/Layout/SearchBar.jsx","webpack://movie-db/./src/components/UI/Button.module.css?ddcd","components/UI/Button.jsx","images/Dropdown.svg","components/Layout/Navbar.jsx","constants/genre.js","webpack://movie-db/./src/components/UI/Card.module.css?26d0","components/UI/Card.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"navbar\":\"Navbar_navbar__LnXFr\",\"navbar_brand\":\"Navbar_navbar_brand__UDaQC\",\"navbar_nav\":\"Navbar_navbar_nav__RSqIv\",\"dropdown\":\"Navbar_dropdown__BGGIX\"};","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"SearchBar_search__eu6RW\",\"search_bar\":\"SearchBar_search_bar__VNGCv\",\"search_button\":\"SearchBar_search_button__9S-n9\",\"search_icon\":\"SearchBar_search_icon__c99NO\"};","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearchIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-search\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearchIcon);\nexport default __webpack_public_path__ + \"static/media/Search_icon.7ac8ebbf758a0e14c1311ef279dd6d16.svg\";\nexport { ForwardRef as ReactComponent };","import { useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport classes from './SearchBar.module.css'\r\n// import Search_icon from '../../assets/images/Search_icon.svg';\r\nimport Search_icon from '../../images/Search_icon.svg'\r\n\r\nconst SearchBar = () => {\r\n    const inputRef = useRef();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        navigate(`/search/${inputRef.current.value}`);\r\n        inputRef.current.value = '';\r\n    }\r\n\r\n    return (\r\n        <form className={classes.search} onSubmit={submitHandler}>\r\n            <input type=\"text\" placeholder=\"Search\" className={classes.search_bar} ref={inputRef} />\r\n            <button className={classes.search_button} type=\"submit\" >\r\n                <img src={Search_icon} alt=\"Search\" className={classes.search_icon} />\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__O+4gT\"};","import classes from './Button.module.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../store/AuthSlice';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Fragment } from 'react';\r\n\r\nlet navigationRoute = null;\r\n\r\nconst Button = (props) => {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const isAuthenticated = useSelector(state => state.auth.isLoggedIn);\r\n\r\n    const handleClick = () => {\r\n        if (props.title === \"Sign In\") {\r\n            navigationRoute = \"/signin\";\r\n            navigate(navigationRoute);\r\n        } else if (props.title === \"Sign Out\") {\r\n            dispatch(logout());\r\n            navigate(\"/\");\r\n        } else if (props.title === \"My WatchList\") {\r\n            if (isAuthenticated) {\r\n                navigate(\"/watchlist\");\r\n            } else {\r\n                toast.warn(\"You need to be logged in to add to watchlist\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <button className={classes.button} onClick={handleClick} >{props.title}</button>\r\n            <ToastContainer />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Button;","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDropdown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"bi\",\n    viewBox: \"0 0 10 15\",\n    fill: \"white\",\n    width: 32,\n    height: 32,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M5 11.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm-3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropdown);\nexport default __webpack_public_path__ + \"static/media/Dropdown.17ca551ceb2cabafbf4f1b9ed73244fa.svg\";\nexport { ForwardRef as ReactComponent };","import classes from './Navbar.module.css';\r\nimport SearchBar from './SearchBar';\r\nimport Button from '../UI/Button';\r\n// import Dropdown from '../../assets/images/Dropdown.svg';\r\nimport Dropdown from '../../images/Dropdown.svg';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nconst Navbar = () => {\r\n\r\n    const isAuthenticated = useSelector(state => state.auth.isLoggedIn);\r\n    const navigate = useNavigate();\r\n\r\n    const moveToHome = () => {\r\n        navigate('/');\r\n    }\r\n\r\n    const [visible, setVisible] = useState(window.innerWidth > 750);\r\n\r\n    const clickHandler = () => {\r\n        setVisible(prevState => !prevState);\r\n    }\r\n\r\n    return (\r\n        <nav className={classes.navbar} >\r\n            <div className={classes.navbar_brand} onClick={moveToHome} >MOVIES._.DB</div>\r\n            <SearchBar />\r\n            <button className={classes.dropdown} >\r\n                <img src={Dropdown} alt=\"dropdown\" className={classes.dropdown_img} onClick={clickHandler} />\r\n            </button>\r\n            {(visible) && < Button title='My WatchList' />}\r\n            {!isAuthenticated && (visible) && <Button title=\"Sign In\" />}\r\n            {isAuthenticated && (visible) && <Button title=\"Sign Out\" />}\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","export const genre_movie = {\r\n    \"28\": \"Action\",\r\n    \"12\": \"Adventure\",\r\n    \"16\": \"Animation\",\r\n    \"35\": \"Comedy\",\r\n    \"80\": \"Crime\",\r\n    \"99\": \"Documentary\",\r\n    \"18\": \"Drama\",\r\n    \"10751\": \"Family\",\r\n    \"14\": \"Fantasy\",\r\n    \"36\": \"History\",\r\n    \"27\": \"Horror\",\r\n    \"10402\": \"Music\",\r\n    \"9648\": \"Mystery\",\r\n    \"10749\": \"Romance\",\r\n    \"878\": \"Science\",\r\n    \"10770\": \"TV Movie\",\r\n    \"53\": \"Thriller\",\r\n    \"10752\": \"War\",\r\n    \"37\": \"Western\",\r\n}\r\n\r\nexport const genre_tv = {\r\n    \"10759\": \"Action & Adventure\",\r\n    \"16\": \"Animation\",\r\n    \"35\": \"Comedy\",\r\n    \"80\": \"Crime\",\r\n    \"99\": \"Documentary\",\r\n    \"18\": \"Drama\",\r\n    \"10751\": \"Family\",\r\n    \"10762\": \"Kids\",\r\n    \"9648\": \"Mystery\",\r\n    \"10763\": \"News\",\r\n    \"10764\": \"Reality\",\r\n    \"10765\": \"Sci-Fi & Fantasy\",\r\n    \"10766\": \"Soap\",\r\n    \"10767\": \"Talk\",\r\n    \"10768\": \"War & Politics\",\r\n    \"37\": \"Western\",\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__9h8Dh\",\"poster\":\"Card_poster__3ksmG\",\"card_content\":\"Card_card_content__0MJj5\",\"title\":\"Card_title__dnKXB\"};","import { genre_movie, genre_tv } from '../../constants/genre';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import poster_error from '../../assets/images/poster_error.jpg';\r\nimport poster_error from '../../images/poster_error.jpg';\r\nimport classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n    const media_type = props.type || props.item.media_type;\r\n    const title = props.item.title || props.item.name;\r\n    const poster_path = props.item.poster_path;\r\n    const release_date = props.item.release_date || props.item.first_air_date;\r\n    const language = props.item.original_language;\r\n    const id = props.item.id;\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const clickHandler = () => {\r\n        navigate(`/details_${media_type}/${id}`);\r\n    };\r\n\r\n    const errorHandler = (e) => {\r\n        e.target.src = poster_error;\r\n    };\r\n\r\n    return (\r\n        <div className={classes.card} onClick={clickHandler}>\r\n            <img src={`https://image.tmdb.org/t/p/original${poster_path}`} alt='' onErrorCapture={errorHandler} className={classes.poster} />\r\n            <ul className={classes.card_content}>\r\n                <li id={classes.title}>{title}</li>\r\n                <li>Language : {language}</li>\r\n                {props.item.genre_ids && <li>Genres : {props.item.genre_ids.map((id) => {\r\n                    if (media_type === \"movie\") {\r\n                        return genre_movie[id];\r\n                    } else {\r\n                        return genre_tv[id];\r\n                    }\r\n                }).join(\", \")}  </li>}\r\n                {props.item.genres && <li>Genres : {props.item.genres.map((genre) => genre.name).join(\", \")}  </li>}\r\n                {media_type === 'movie' && <li >Release Date : {release_date}</li>}\r\n                {media_type === 'tv' && <li >First Air Date : {release_date}</li>}\r\n                <li>Type : {media_type}</li>\r\n            </ul>\r\n        </div>);\r\n};\r\n\r\nexport default Card;"],"names":["inputRef","useRef","navigate","useNavigate","className","classes","onSubmit","event","preventDefault","current","value","type","placeholder","ref","src","Search_icon","alt","props","dispatch","useDispatch","isAuthenticated","useSelector","state","auth","isLoggedIn","Fragment","onClick","title","logout","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","useState","window","innerWidth","visible","setVisible","Dropdown","prevState","genre_movie","genre_tv","media_type","item","name","poster_path","release_date","first_air_date","language","original_language","id","onErrorCapture","e","target","poster_error","genre_ids","map","join","genres","genre"],"sourceRoot":""}