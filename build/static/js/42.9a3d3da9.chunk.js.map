{"version":3,"file":"static/js/42.9a3d3da9.chunk.js","mappings":"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","sources":["webpack://movie-db/./src/components/Layout/Navbar.module.css?b110","webpack://movie-db/./src/components/Layout/SearchBar.module.css?8186","images/Search_icon.svg","components/Layout/SearchBar.jsx","webpack://movie-db/./src/components/UI/Button.module.css?ddcd","components/UI/Button.jsx","images/Dropdown.svg","components/Layout/Navbar.jsx","webpack://movie-db/./src/components/UI/PageButton.module.css?e242","components/UI/PageButton.jsx","webpack://movie-db/./src/components/pages/Details.module.css?d3c3","webpack://movie-db/./src/components/UI/WatchListButton.module.css?b4f4","components/UI/WatchListButton.jsx","components/pages/Details.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"navbar\":\"Navbar_navbar__LnXFr\",\"navbar_brand\":\"Navbar_navbar_brand__UDaQC\",\"navbar_nav\":\"Navbar_navbar_nav__RSqIv\",\"dropdown\":\"Navbar_dropdown__BGGIX\"};","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"SearchBar_search__eu6RW\",\"search_bar\":\"SearchBar_search_bar__VNGCv\",\"search_button\":\"SearchBar_search_button__9S-n9\",\"search_icon\":\"SearchBar_search_icon__c99NO\"};","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearchIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-search\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearchIcon);\nexport default __webpack_public_path__ + \"static/media/Search_icon.7ac8ebbf758a0e14c1311ef279dd6d16.svg\";\nexport { ForwardRef as ReactComponent };","import { useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport classes from './SearchBar.module.css'\r\n// import Search_icon from '../../assets/images/Search_icon.svg';\r\nimport Search_icon from '../../images/Search_icon.svg'\r\n\r\nconst SearchBar = () => {\r\n    const inputRef = useRef();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        navigate(`/search/${inputRef.current.value}`);\r\n        inputRef.current.value = '';\r\n    }\r\n\r\n    return (\r\n        <form className={classes.search} onSubmit={submitHandler}>\r\n            <input type=\"text\" placeholder=\"Search\" className={classes.search_bar} ref={inputRef} />\r\n            <button className={classes.search_button} type=\"submit\" >\r\n                <img src={Search_icon} alt=\"Search\" className={classes.search_icon} />\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__O+4gT\"};","import classes from './Button.module.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../store/AuthSlice';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Fragment } from 'react';\r\n\r\nlet navigationRoute = null;\r\n\r\nconst Button = (props) => {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const isAuthenticated = useSelector(state => state.auth.isLoggedIn);\r\n\r\n    const handleClick = () => {\r\n        if (props.title === \"Sign In\") {\r\n            navigationRoute = \"/signin\";\r\n            navigate(navigationRoute);\r\n        } else if (props.title === \"Sign Out\") {\r\n            dispatch(logout());\r\n            navigate(\"/\");\r\n        } else if (props.title === \"My WatchList\") {\r\n            if (isAuthenticated) {\r\n                navigate(\"/watchlist\");\r\n            } else {\r\n                toast.warn(\"You need to be logged in to add to watchlist\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <button className={classes.button} onClick={handleClick} >{props.title}</button>\r\n            <ToastContainer />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Button;","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDropdown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"bi\",\n    viewBox: \"0 0 10 15\",\n    fill: \"white\",\n    width: 32,\n    height: 32,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M5 11.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm-3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropdown);\nexport default __webpack_public_path__ + \"static/media/Dropdown.17ca551ceb2cabafbf4f1b9ed73244fa.svg\";\nexport { ForwardRef as ReactComponent };","import classes from './Navbar.module.css';\r\nimport SearchBar from './SearchBar';\r\nimport Button from '../UI/Button';\r\n// import Dropdown from '../../assets/images/Dropdown.svg';\r\nimport Dropdown from '../../images/Dropdown.svg';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nconst Navbar = () => {\r\n\r\n    const isAuthenticated = useSelector(state => state.auth.isLoggedIn);\r\n    const navigate = useNavigate();\r\n\r\n    const moveToHome = () => {\r\n        navigate('/');\r\n    }\r\n\r\n    const [visible, setVisible] = useState(window.innerWidth > 750);\r\n\r\n    const clickHandler = () => {\r\n        setVisible(prevState => !prevState);\r\n    }\r\n\r\n    return (\r\n        <nav className={classes.navbar} >\r\n            <div className={classes.navbar_brand} onClick={moveToHome} >MOVIES._.DB</div>\r\n            <SearchBar />\r\n            <button className={classes.dropdown} >\r\n                <img src={Dropdown} alt=\"dropdown\" className={classes.dropdown_img} onClick={clickHandler} />\r\n            </button>\r\n            {(visible) && < Button title='My WatchList' />}\r\n            {!isAuthenticated && (visible) && <Button title=\"Sign In\" />}\r\n            {isAuthenticated && (visible) && <Button title=\"Sign Out\" />}\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","// extracted by mini-css-extract-plugin\nexport default {\"PageButton\":\"PageButton_PageButton__JU1dU\"};","import { useNavigate } from \"react-router-dom\";\r\nimport classes from \"./PageButton.module.css\";\r\n\r\n\r\nconst PageButton = (props) => {\r\n    const navigate = useNavigate();\r\n\r\n    let search_word;\r\n\r\n    if (props.title === 'trending movies') {\r\n        search_word = 'trending_movies';\r\n    } else if (props.title === 'trending tv shows') {\r\n        search_word = 'trending_tv';\r\n    } else if (props.title === 'popular movies') {\r\n        search_word = 'popular_movies';\r\n    } else if (props.title === 'popular tv shows') {\r\n        search_word = 'popular_tv';\r\n    } else if (props.title === 'top rated movies') {\r\n        search_word = 'top_rated_movies';\r\n    } else if (props.title === 'top rated tv shows') {\r\n        search_word = 'top_rated_tv';\r\n    } else if (props.title === 'upcoming movies') {\r\n        search_word = 'upcoming_movies';\r\n    } else if (props.title === 'on the air tv shows') {\r\n        search_word = 'on_the_air';\r\n    } else if (props.title === 'Similar Movies') {\r\n        search_word = 'similar_movies/' + props.id;\r\n    } else if (props.title === 'Similar Tv Shows') {\r\n        search_word = 'similar_tv/' + props.id;\r\n    } else if (props.title === 'Recommended Movies') {\r\n        search_word = 'recommended_movies/' + props.id;\r\n    } else if (props.title === 'Recommended Tv Shows') {\r\n        search_word = 'recommended_tv/' + props.id;\r\n    }\r\n\r\n    const moveToPage = () => {\r\n        navigate(\"/\" + search_word);\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className={classes.PageButton}\r\n            onClick={moveToPage}\r\n            style={{ backgroundColor: props.backgroundColor }}\r\n        >\r\n            {props.title}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default PageButton;","// extracted by mini-css-extract-plugin\nexport default {\"details\":\"Details_details__dpf+v\",\"poster_container\":\"Details_poster_container__fHIN+\",\"poster\":\"Details_poster__KHQ8r\",\"details_container\":\"Details_details_container__pbC4+\",\"title\":\"Details_title__-PvPQ\",\"buttonHolder\":\"Details_buttonHolder__yP+7X\"};","// extracted by mini-css-extract-plugin\nexport default {\"center\":\"WatchListButton_center__rKswF\",\"watchlist_button\":\"WatchListButton_watchlist_button__kszSl\"};","import { useState } from \"react\";\r\nimport { updateWatchList } from \"../store/AuthSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport classes from './WatchListButton.module.css';\r\n\r\n\r\nconst WatchListButton = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const loggedIn = useSelector(state => state.auth.isLoggedIn);\r\n    const movie = useSelector(state => state.auth.user_data);\r\n\r\n    let initialStateOfWatchList = false;\r\n\r\n    for (let index = 0; index < movie.length; index++) {\r\n        if (movie[index].movie_id === props.search_id && movie[index].media_type === props.media_type) {\r\n            initialStateOfWatchList = true;\r\n        }\r\n    }\r\n\r\n    const [isAdded, setIsAdded] = useState(initialStateOfWatchList);\r\n\r\n    const WatchListHandler = (event) => {\r\n        if (loggedIn) {\r\n            let query_word = \"\";\r\n            if (event.target.innerText === \"Add To WatchList\") {\r\n                query_word = \"add\";\r\n                setIsAdded(true);\r\n            } else {\r\n                query_word = \"remove\";\r\n                setIsAdded(false);\r\n            }\r\n            const body = {\r\n                id: props.search_id,\r\n                type: props.media_type\r\n            };\r\n            const url = `https://delightful-deer-peplum.cyclic.app/api/${query_word}`;\r\n            const Data = async () => {\r\n                const token = localStorage.getItem(\"token\");\r\n                try {\r\n                    const response = await axios.post(url, body, { headers: { \"Authorization\": `Bearer ${token}` } });\r\n                    dispatch(updateWatchList(response.data.movie));\r\n                    toast.success(response.data.message, {\r\n                        position: \"top-right\",\r\n                        autoClose: 500,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    toast.error(\"Error while sending data\", {\r\n                        position: \"top-right\",\r\n                        autoClose: 2000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true\r\n                    });\r\n                }\r\n            };\r\n            Data();\r\n        } else if (!loggedIn) {\r\n            toast.warn(\"You need to be logged in to add to watchlist\", {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes.center}>\r\n            {!isAdded && !props.title && <button className={classes.watchlist_button} onClick={WatchListHandler} >Add To WatchList</button>}\r\n            {isAdded && !props.title && <button className={classes.watchlist_button} onClick={WatchListHandler} >Remove From WatchList</button>}\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WatchListButton;","import { Fragment, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport classes from \"./Details.module.css\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport WatchListButton from \"../UI/WatchListButton\";\r\nimport poster_error from '../../images/poster_error.jpg';\r\nimport Navbar from \"../Layout/Navbar\";\r\nimport PageButton from \"../UI/PageButton\";\r\n\r\nconst Details = () => {\r\n    const params = useParams();\r\n    const location = useLocation();\r\n\r\n    const search_id = params.id;\r\n    const media_type = location.pathname.split(\"/\")[1] === \"details_movie\" ? \"movie\" : \"tv\";\r\n\r\n    const [details, setDetails] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const url = `https://delightful-deer-peplum.cyclic.app/api/search_${media_type}/${search_id}`;\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get(url);\r\n                setDetails(response.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetchData();\r\n\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n\r\n\r\n    }, [search_id, media_type]);\r\n\r\n    const errorHandler = (e) => {\r\n        e.target.src = poster_error;\r\n    };\r\n\r\n\r\n    let title = \"\";\r\n    if (media_type === \"movie\") {\r\n        title = \"Movies\";\r\n    } else {\r\n        title = \"Tv Shows\";\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Navbar />\r\n            {\r\n                details.length !== 0 &&\r\n                <Fragment>\r\n                    <div className={classes.details}>\r\n                        <div className={classes.poster_container}>\r\n                            <img src={`https://image.tmdb.org/t/p/original${details.poster_path}`} className={classes.poster} alt=\"poster\" onErrorCapture={errorHandler} />\r\n                        </div>\r\n                        <div className={classes.details_container}>\r\n                            <WatchListButton media_type={media_type} search_id={search_id} />\r\n                            <li className={classes.title}>{details.title || details.name}</li>\r\n                            {details.genres && <li ><strong>GENRES : </strong>{details.genres.map(genre => genre.name).join(\", \")} </li>}\r\n                            {media_type === 'movie' && <li ><strong>RELEASE DATE :</strong> {details.release_date}</li>}\r\n                            {media_type === 'tv' && <li ><strong>FIRST AIR DATE :</strong> {details.first_air_date}</li>}\r\n                            {media_type === 'tv' && <li ><strong>LATEST AIR DATE :</strong> {details.last_air_date}</li>}\r\n                            {media_type === 'tv' && <li ><strong>TOTAL SEASONS : </strong> {details.number_of_seasons}</li>}\r\n                            {media_type === 'tv' && <li ><strong>TOTAL EPISODES : </strong> {details.number_of_episodes}</li>}\r\n                            <li ><strong>LANGUAGE : </strong> {details.original_language}</li>\r\n                            {/* <li ><strong>TYPE : </strong>{media_type}</li> */}\r\n                            <li ><strong>STATUS : </strong> {details.status}</li>\r\n                            {details.tagline && <li ><strong>TAGLINE : </strong> {details.tagline}</li>}\r\n                            {(media_type === 'movie' && details.runtime !== 0) && <li ><strong>RUNTIME : </strong> {details.runtime} minutes</li>}\r\n                            {(media_type === 'tv' && details.episode_run_time !== 0) && <li ><strong>EPISODE RUNTIME : </strong> {details.episode_run_time.sort().join(\" - \")} minutes</li>}\r\n                            <li ><strong>OVERVIEW : </strong>{details.overview}</li>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.buttonHolder}>\r\n                        <PageButton title={`Similar ${title}`} id={search_id} type={title} backgroundColor='#7593ea' />\r\n                        <PageButton title={`Recommended ${title}`} id={search_id} type={title} backgroundColor='#94fef4' />\r\n                    </div>\r\n                </Fragment>\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Details;"],"names":["inputRef","useRef","navigate","useNavigate","className","classes","onSubmit","event","preventDefault","current","value","type","placeholder","ref","src","Search_icon","alt","props","dispatch","useDispatch","isAuthenticated","useSelector","state","auth","isLoggedIn","Fragment","onClick","title","logout","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","useState","window","innerWidth","visible","setVisible","Dropdown","prevState","search_word","id","style","backgroundColor","loggedIn","movie","user_data","initialStateOfWatchList","index","length","movie_id","search_id","media_type","isAdded","setIsAdded","WatchListHandler","query_word","target","innerText","body","url","Data","token","localStorage","getItem","axios","headers","response","updateWatchList","data","message","console","log","params","useParams","location","useLocation","pathname","split","details","setDetails","useEffect","fetchData","scrollTo","top","behavior","Navbar","poster_path","onErrorCapture","e","poster_error","name","genres","map","genre","join","release_date","first_air_date","last_air_date","number_of_seasons","number_of_episodes","original_language","status","tagline","runtime","episode_run_time","sort","overview","PageButton"],"sourceRoot":""}