{"version":3,"file":"static/js/212.ea1ebfd1.chunk.js","mappings":"yLAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE,G,2FIJ9F,EAAwB,yBAAxB,EAA8D,8BAA9D,EAA0G,+BAA1G,EAAkJ,0B,gDCsFlJ,EA7EkB,WAEd,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACaC,KAAKC,MAAMC,aAAaC,QAAQ,UACxCC,KAAI,SAACC,GACZ,IAAMC,EAAM,wDAA0DD,EAAKE,WAAa,IAAMF,EAAKG,SAC7FC,EAAS,mCAAG,6GAEaC,IAAAA,IAAUJ,GAFvB,OAEJK,EAFI,OAGVb,GAAQ,SAAAD,GAAI,kBAAQA,GAAR,oBAAmBc,EAASd,MAA5B,IAAkCU,WAAYF,EAAKE,WAAYC,SAAUH,EAAKG,gBAHhF,gDAKVI,QAAQC,IAAR,MALU,yDAAH,qDAQf,OAAOJ,SAEZ,IAEH,IAAMK,EAAgB,SAACC,GACnB,IAAMC,EAAWhB,KAAKC,MAAMc,EAAME,OAAOC,OACnCC,EAAO,CACTC,GAAIJ,EAASI,GACbC,KAAML,EAAST,YAGbe,EAAI,mCAAG,6FACHC,EAAQrB,aAAaC,QAAQ,SAD1B,kBAGkBO,IAAAA,KAJtB,uDAIsCS,EAAM,CAAEK,QAAS,CAAE,cAAgB,UAAhB,OAA2BD,MAHhF,OAGCZ,EAHD,OAILjB,GAAS+B,EAAAA,EAAAA,IAAgBd,EAASd,KAAK6B,QACvCC,EAAAA,GAAAA,QAAchB,EAASd,KAAK+B,QAAS,CACjCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEdC,YAAW,WACPC,OAAOC,SAASC,QAAO,KACxB,KAfE,kDAiBL3B,QAAQC,IAAR,MACAc,EAAAA,GAAAA,MAAY,2BAA4B,CACpCE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdQ,cAAc,IAvBb,0DAAH,qDA2BVlB,KAGJ,OACI,UAAC,EAAAmB,SAAD,YACI,SAACC,EAAA,EAAD,KACA,eAAIC,UAAWC,EAAf,2BACA,gBAAKD,UAAWC,EAAhB,SACK/C,EAAKO,KAAI,SAACC,GACP,OACI,iBAAKsC,UAAWC,EAAhB,WACI,SAACC,EAAA,EAAD,CAAMxC,KAAMA,EAAMgB,KAAMhB,EAAKE,cAC7B,mBAAQW,MAAOlB,KAAK8C,UAAU,CAAEvC,WAAYF,EAAKE,WAAYa,GAAIf,EAAKe,KAAO2B,QAASjC,EAAe6B,UAAWC,EAAhH,qCAFqCvC,EAAKe,UAO1D,SAAC,KAAD","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://movie-db/./src/components/pages/WatchList.module.css?8a0c","components/pages/WatchList.jsx"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"WatchList_title__Vcsgn\",\"oneElement\":\"WatchList_oneElement__JBH0-\",\"card_holder\":\"WatchList_card_holder__75rbE\",\"button\":\"WatchList_button__9lBcw\"};","import { Fragment, useEffect, useState } from \"react\";\r\nimport Navbar from \"../Layout/Navbar\";\r\nimport axios from \"axios\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from './WatchList.module.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateWatchList } from \"../store/AuthSlice\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst WatchList = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const movie_data = JSON.parse(localStorage.getItem('movie'));\r\n        movie_data.map((item) => {\r\n            const url = \"https://delightful-deer-peplum.cyclic.app/api/search_\" + item.media_type + \"/\" + item.movie_id;\r\n            const fetchData = async () => {\r\n                try {\r\n                    const response = await axios.get(url);\r\n                    setData(data => [...data, { ...response.data, media_type: item.media_type, movie_id: item.movie_id }]);\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            };\r\n            return fetchData();\r\n        });\r\n    }, []);\r\n\r\n    const removeHandler = (event) => {\r\n        const bodyData = JSON.parse(event.target.value);\r\n        const body = {\r\n            id: bodyData.id,\r\n            type: bodyData.media_type\r\n        };\r\n        const url = `https://delightful-deer-peplum.cyclic.app/api/remove`;\r\n        const Data = async () => {\r\n            const token = localStorage.getItem(\"token\");\r\n            try {\r\n                const response = await axios.post(url, body, { headers: { \"Authorization\": `Bearer ${token}` } });\r\n                dispatch(updateWatchList(response.data.movie));\r\n                toast.success(response.data.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 500,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                setTimeout(() => {\r\n                    window.location.reload(false);\r\n                }, 1000);\r\n            } catch (error) {\r\n                console.log(error);\r\n                toast.error(\"Error while sending data\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true\r\n                });\r\n            }\r\n        };\r\n        Data();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Navbar />\r\n            <h1 className={classes.title} >My WatchList</h1>\r\n            <div className={classes.card_holder}>\r\n                {data.map((item) => {\r\n                    return (\r\n                        <div className={classes.oneElement} key={item.id}>\r\n                            <Card item={item} type={item.media_type} />\r\n                            <button value={JSON.stringify({ media_type: item.media_type, id: item.id })} onClick={removeHandler} className={classes.button} >Remove From WatchList</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <ToastContainer />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default WatchList;"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","dispatch","useDispatch","useState","data","setData","useEffect","JSON","parse","localStorage","getItem","map","item","url","media_type","movie_id","fetchData","axios","response","console","log","removeHandler","event","bodyData","target","value","body","id","type","Data","token","headers","updateWatchList","movie","toast","message","position","autoClose","hideProgressBar","closeOnClick","draggable","progress","undefined","setTimeout","window","location","reload","pauseOnHover","Fragment","Navbar","className","classes","Card","stringify","onClick"],"sourceRoot":""}